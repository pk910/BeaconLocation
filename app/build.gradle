apply plugin: 'com.android.application'

apply plugin: 'findbugs'
apply plugin: 'pmd'

android {
    compileSdkVersion 23
    buildToolsVersion '22.0.1'

    defaultConfig {
        applicationId "de.dhbwloerrach.beaconlocation"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'org.altbeacon:android-beacon-library:2.3.3'
    compile('com.mikepenz:materialdrawer:3.1.2@aar') {
        transitive = true
    }
}

task findbugsMain(type: FindBugs, dependsOn: assembleDebug) {

    description 'Run findbugs on main'
    group 'verification'

    ignoreFailures = true // Do not stop build on errors (so CI can evaluate the results)

    effort = "max"
    reportLevel = "low"
    classes = files("$project.buildDir/intermediates/classes")

    excludeFilter = file("./config/findbugs-android-exclude.xml")

    source = fileTree('src/main/java/')
    classpath = files()

    reports {
        xml.enabled = true
        xml.withMessages = true
        html.enabled = false
    }
}

task pmdMain (type: Pmd, dependsOn: assembleDebug) {

    description 'Run pmd'
    group 'verification'

    ignoreFailures = true // Do not stop build on errors (so CI can evaluate the results)

    ruleSets = [ "java-basic", "java-strings", "java-braces", "java-design", "java-unusedcode" ]
    source = fileTree('src/main/java')

    reports {
        xml.enabled = true
        html.enabled = false
    }
}

check.doLast {
    project.tasks.getByName("findbugsMain").execute()
    project.tasks.getByName("pmdMain").execute()
}